/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISemaphoreWhistleblowing,
  ISemaphoreWhistleblowingInterface,
} from "../ISemaphoreWhistleblowing";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "editor",
        type: "address",
      },
    ],
    name: "EntityCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "leak",
        type: "string",
      },
    ],
    name: "LeakPublished",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
    ],
    name: "addWhistleblower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "editor",
        type: "address",
      },
    ],
    name: "createEntity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "leak",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "publishLeak",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "proofSiblings",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "proofPathIndices",
        type: "uint8[]",
      },
    ],
    name: "removeWhistleblower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISemaphoreWhistleblowing__factory {
  static readonly abi = _abi;
  static createInterface(): ISemaphoreWhistleblowingInterface {
    return new utils.Interface(_abi) as ISemaphoreWhistleblowingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISemaphoreWhistleblowing {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ISemaphoreWhistleblowing;
  }
}
